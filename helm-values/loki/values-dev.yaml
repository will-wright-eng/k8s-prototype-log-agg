loki:
  # Use monolithic mode for simplicity
  singleBinary:
    replicas: 1
  # Service account with Workload Identity
  serviceAccount:
    create: false
    name: loki-sa
  # Configure storage
  storage:
    bucketNames:
      chunks: ${GCS_BUCKET_NAME}
      ruler: ${GCS_BUCKET_NAME}
      admin: ${GCS_BUCKET_NAME}
    type: gcs
  schemaConfig:
    configs:
      - from: 2022-01-01
        store: boltdb-shipper
        object_store: gcs
        schema: v12
        index:
          prefix: index_
          period: 24h
  storageConfig:
    gcs:
      bucketName: ${GCS_BUCKET_NAME}
    boltdb_shipper:
      active_index_directory: /data/loki/index
      cache_location: /data/loki/index_cache
      cache_ttl: 24h
      shared_store: gcs
  structuredConfig:
    compactor:
      working_directory: /data/loki/compactor
      shared_store: gcs
      compaction_interval: 10m
      retention_enabled: true
      retention_delete_delay: 2h
      retention_delete_worker_count: 150
    limits_config:
      retention_period: 30d
      per_stream_rate_limit: 4MB
      per_stream_rate_limit_burst: 8MB
      ingestion_rate_mb: 8
      ingestion_burst_size_mb: 16
      max_streams_per_user: 10000
  # Resources for single binary mode
  resources:
    requests:
      cpu: 1
      memory: 2Gi
    limits:
      cpu: 2
      memory: 4Gi
  # Use Redis for index storage
  dependencies:
    redis:
      enabled: false # We'll use our dedicated Redis instance
    index_gateway:
      enabled: false # Not needed for single binary mode
# Persistence
persistence:
  enabled: true
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  storageClass: loki-storage
# Service configuration
service:
  type: ClusterIP
# Configure Loki to work with Grafana
config:
  auth_enabled: false
